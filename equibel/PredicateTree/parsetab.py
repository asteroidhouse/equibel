
# equibel/PredicateTree/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '478A82D5E30F8251E282BA9BF3BAF075'
    
_lr_action_items = {'RPAREN':([4,5,6,7,8,9,11,],[-6,9,-2,-4,-5,-1,-3,]),'COMMA':([4,6,7,8,9,],[-6,10,-4,-5,-1,]),'LPAREN':([2,8,],[3,3,]),'INTEGER':([3,10,],[7,7,]),'IDENTIFIER':([0,3,10,],[2,8,8,]),'$end':([1,9,],[0,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PREDICATE':([0,3,10,],[1,4,4,]),'ARGS':([3,10,],[5,11,]),'ARG':([3,10,],[6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PREDICATE","S'",1,None,None,None),
  ('PREDICATE -> IDENTIFIER LPAREN ARGS RPAREN','PREDICATE',4,'p_PREDICATE','predicate_parser.py',40),
  ('ARGS -> ARG','ARGS',1,'p_ARGS','predicate_parser.py',45),
  ('ARGS -> ARG COMMA ARGS','ARGS',3,'p_ARGS','predicate_parser.py',46),
  ('ARG -> INTEGER','ARG',1,'p_ARG','predicate_parser.py',51),
  ('ARG -> IDENTIFIER','ARG',1,'p_ARG','predicate_parser.py',52),
  ('ARG -> PREDICATE','ARG',1,'p_ARG','predicate_parser.py',53),
]
