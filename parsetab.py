
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\x16\xf0\x1a\x98~I\x9c\x86\xee\x06\xb5\x02k\xf6.\xe6'
    
_lr_action_items = {'$end':([1,6,17,],[0,-1,-2,]),'NEWLINE':([2,3,5,9,10,11,12,13,14,16,20,22,23,25,31,32,36,39,45,],[-21,6,-22,-10,-9,-4,-5,-11,-23,-12,-3,-6,-23,-14,-21,-7,-8,-15,-13,]),'IDENTIFIER':([0,2,4,5,6,18,31,],[-23,-21,7,-22,-23,7,7,]),'RPAREN':([2,5,42,44,],[-21,-22,-23,45,]),'LPAREN':([0,2,4,5,6,15,18,21,31,38,41,],[-23,-21,8,-22,-23,-23,8,8,8,-23,8,]),'STRING':([0,2,4,5,6,15,18,21,31,38,41,],[-23,-21,9,-22,-23,-23,9,28,9,-23,28,]),'WHITESPACE':([0,2,5,6,7,8,9,10,11,12,13,14,15,16,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,42,43,45,],[2,-21,-22,2,18,2,-10,-9,-4,-5,-11,2,2,-12,-6,31,2,-14,2,-20,-19,-18,2,-21,-7,-16,-8,2,2,-15,2,-17,-13,]),'RSQUARE':([2,5,15,21,26,27,28,29,30,34,35,43,45,],[-21,-22,-23,25,-23,-20,-19,-18,-23,-16,39,-17,-13,]),'INTEGER':([0,2,4,5,6,8,15,18,19,21,31,37,38,40,41,],[-23,-21,10,-22,-23,-23,-23,10,24,29,10,-23,-23,42,29,]),'COMMA':([2,5,24,26,27,28,29,33,34,45,],[-21,-22,-23,-23,-20,-19,-18,37,38,-13,]),'LSQUARE':([0,2,4,5,6,18,31,],[-23,-21,15,-22,-23,15,15,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'LINES':([0,6,],[1,17,]),'ELEMENT':([21,41,],[26,26,]),'FUNCTION_CALL':([4,18,31,],[12,12,12,]),'LINE':([0,6,],[3,3,]),'OPT_WHITE':([0,6,8,14,15,23,24,26,30,37,38,42,],[4,4,19,20,21,32,33,34,35,40,41,44,]),'ELEMENTS':([21,41,],[30,43,]),'LITERAL':([4,18,31,],[11,11,11,]),'ARGS':([18,31,],[22,36,]),'ORDERED_PAIR':([4,18,21,31,41,],[13,13,27,13,27,]),'EXPRESSION':([4,18,31,],[14,23,23,]),'LIST':([4,18,31,],[16,16,16,]),'empty':([0,6,8,14,15,23,24,26,30,37,38,42,],[5,5,5,5,5,5,5,5,5,5,5,5,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> LINES","S'",1,None,None,None),
  ('LINES -> LINE NEWLINE','LINES',2,'p_LINES','Equibel_Parser.py',49),
  ('LINES -> LINE NEWLINE LINES','LINES',3,'p_LINES','Equibel_Parser.py',50),
  ('LINE -> OPT_WHITE EXPRESSION OPT_WHITE','LINE',3,'p_LINE','Equibel_Parser.py',55),
  ('EXPRESSION -> LITERAL','EXPRESSION',1,'p_EXPRESSION','Equibel_Parser.py',60),
  ('EXPRESSION -> FUNCTION_CALL','EXPRESSION',1,'p_EXPRESSION','Equibel_Parser.py',61),
  ('FUNCTION_CALL -> IDENTIFIER WHITESPACE ARGS','FUNCTION_CALL',3,'p_FUNCTION_CALL','Equibel_Parser.py',66),
  ('ARGS -> EXPRESSION OPT_WHITE','ARGS',2,'p_ARGS','Equibel_Parser.py',70),
  ('ARGS -> EXPRESSION WHITESPACE ARGS','ARGS',3,'p_ARGS','Equibel_Parser.py',71),
  ('LITERAL -> INTEGER','LITERAL',1,'p_LITERAL','Equibel_Parser.py',76),
  ('LITERAL -> STRING','LITERAL',1,'p_LITERAL','Equibel_Parser.py',77),
  ('LITERAL -> ORDERED_PAIR','LITERAL',1,'p_LITERAL','Equibel_Parser.py',78),
  ('LITERAL -> LIST','LITERAL',1,'p_LITERAL','Equibel_Parser.py',79),
  ('ORDERED_PAIR -> LPAREN OPT_WHITE INTEGER OPT_WHITE COMMA OPT_WHITE INTEGER OPT_WHITE RPAREN','ORDERED_PAIR',9,'p_ORDERED_PAIR','Equibel_Parser.py',83),
  ('LIST -> LSQUARE OPT_WHITE RSQUARE','LIST',3,'p_LIST','Equibel_Parser.py',88),
  ('LIST -> LSQUARE OPT_WHITE ELEMENTS OPT_WHITE RSQUARE','LIST',5,'p_LIST','Equibel_Parser.py',89),
  ('ELEMENTS -> ELEMENT OPT_WHITE','ELEMENTS',2,'p_ELEMENTS','Equibel_Parser.py',98),
  ('ELEMENTS -> ELEMENT OPT_WHITE COMMA OPT_WHITE ELEMENTS','ELEMENTS',5,'p_ELEMENTS','Equibel_Parser.py',99),
  ('ELEMENT -> INTEGER','ELEMENT',1,'p_ELEMENT','Equibel_Parser.py',106),
  ('ELEMENT -> STRING','ELEMENT',1,'p_ELEMENT','Equibel_Parser.py',107),
  ('ELEMENT -> ORDERED_PAIR','ELEMENT',1,'p_ELEMENT','Equibel_Parser.py',108),
  ('OPT_WHITE -> WHITESPACE','OPT_WHITE',1,'p_OPT_WHITE','Equibel_Parser.py',113),
  ('OPT_WHITE -> empty','OPT_WHITE',1,'p_OPT_WHITE','Equibel_Parser.py',114),
  ('empty -> <empty>','empty',0,'p_empty','Equibel_Parser.py',118),
]
